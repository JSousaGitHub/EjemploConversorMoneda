// <auto-generated />
using System;
using EjermploConversorMoneda.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EjermploConversorMoneda.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241113073619_AppDbContext")]
    partial class AppDbContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EjermploConversorMoneda.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("EjermploConversorMoneda.Entidades.FactorConversion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Factor")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonedaDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("MonedaOrigenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonedaDestinoId");

                    b.HasIndex("MonedaOrigenId");

                    b.ToTable("FactoresConversion");
                });

            modelBuilder.Entity("EjermploConversorMoneda.Entidades.HistorialConversion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<decimal>("FactorConversionUsado")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("FechaConversion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("MonedaDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("MonedaOrigenId")
                        .HasColumnType("int");

                    b.Property<decimal>("Resultado")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MonedaDestinoId");

                    b.HasIndex("MonedaOrigenId");

                    b.ToTable("HistorialConversiones");
                });

            modelBuilder.Entity("EjermploConversorMoneda.Entidades.Moneda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Monedas");
                });

            modelBuilder.Entity("EjermploConversorMoneda.Entidades.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Capital")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CodigoISO")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrefijoTelefonico")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("EjermploConversorMoneda.Entidades.Cliente", b =>
                {
                    b.HasOne("EjermploConversorMoneda.Entidades.Pais", "Pais")
                        .WithMany("Clientes")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("EjermploConversorMoneda.Entidades.FactorConversion", b =>
                {
                    b.HasOne("EjermploConversorMoneda.Entidades.Moneda", "MonedaDestino")
                        .WithMany()
                        .HasForeignKey("MonedaDestinoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EjermploConversorMoneda.Entidades.Moneda", "MonedaOrigen")
                        .WithMany()
                        .HasForeignKey("MonedaOrigenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MonedaDestino");

                    b.Navigation("MonedaOrigen");
                });

            modelBuilder.Entity("EjermploConversorMoneda.Entidades.HistorialConversion", b =>
                {
                    b.HasOne("EjermploConversorMoneda.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EjermploConversorMoneda.Entidades.Moneda", "MonedaDestino")
                        .WithMany()
                        .HasForeignKey("MonedaDestinoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EjermploConversorMoneda.Entidades.Moneda", "MonedaOrigen")
                        .WithMany()
                        .HasForeignKey("MonedaOrigenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("MonedaDestino");

                    b.Navigation("MonedaOrigen");
                });

            modelBuilder.Entity("EjermploConversorMoneda.Entidades.Pais", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
